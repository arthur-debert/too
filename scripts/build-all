#!/usr/bin/env bash
set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Get the project root directory
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo -e "${BLUE}${BOLD}ðŸš€ Building too and tool binaries...${NC}"
echo

# Create build directory if it doesn't exist
mkdir -p build

# Build main too binary
echo -e "${GREEN}Building too...${NC}"
go build -o build/too ./cmd/too
echo -e "${GREEN}âœ… too built${NC}"
echo

# Build completion generator
echo -e "${GREEN}Building too-completion...${NC}"
go build -o build/too-completion ./cmd/tools/too-completion
echo -e "${GREEN}âœ… too-completion built${NC}"
echo

# Build man page generator
echo -e "${GREEN}Building too-manpage...${NC}"
go build -o build/too-manpage ./cmd/tools/too-manpage
echo -e "${GREEN}âœ… too-manpage built${NC}"
echo

echo -e "${GREEN}${BOLD}âœ… All binaries built successfully!${NC}"
echo -e "${YELLOW}Binaries are in: ${PROJECT_ROOT}/build/${NC}"

# List built binaries
echo
echo -e "${BLUE}Built binaries:${NC}"
ls -la build/ | grep -E '^-' | awk '{print "  " $9}'